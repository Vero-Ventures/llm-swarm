```
def fibonacci(n):
    """
    Calculate the nth Fibonacci number.

    Args:
        n (int): The position of the Fibonacci number to calculate.

    Returns:
        int: The nth Fibonacci number.
    """
    previous_two_values = 0, 1
    for _ in range(n):
        previous_two_values = previous_two_values[1], previous_two_values[0] + previous_two_values[1]
    return previous_two_values[0]
```
```
def merge_sorted_lists(left_list, right_list):
    """
    Merge two sorted lists into one sorted list.

    Args:
        left_list (list): The first sorted list.
        right_list (list): The second sorted list.

    Returns:
        list: The merged sorted list.

    Example:
        >>> left_list = [1, 3, 5]
        >>> right_list = [2, 4, 6]
        >>> merge_sorted_lists(left_list, right_list)
        [1, 2, 3, 4, 5, 6]

    """
    merged_list = []
    left_index, right_index = 0, 0
    while left_index < len(left_list) and right_index < len(right_list):
        if left_list[left_index] < right_list[right_index]:
            merged_list.append(left_list[left_index])
            left_index += 1
        else:
            merged_list.append(right_list[right_index])
            right_index += 1
    merged_list.extend(left_list[left_index:])
    merged_list.extend(right_list[right_index:])
    return merged_list
```
